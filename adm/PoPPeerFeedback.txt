I'm teaching Programmering og probleml√∏sning, which is an introduction to programming at the bachelor education of computer science. I will experiment with peer-feedback in the fall.

The class typically consists of 250 students, that are taught in units of 1 hour in a lecture hall by me or a co-teacher and divided into class rooms of about 25 for 2 hours of exercises, where each class is taught by a teaching assistant (TA). We emphasize that the TAs should not give a lecture but focus on solving pre-specified problems and possibly add relevant problems on their own. The peer-feedback I'm considering will take place in the class rooms and will be orchestrated by the TAs.

The course focusses on learn to program in various paradigms including writing appropriate comments in the code, and as a secondary target we seek to teach the student to write reports about their solution. I would like to use peer-feedback to aid in the teaching of how to write good comments and reports, so I expect to use peer feedback in 5 events: 1 in the very first week of the course, 2 in the middle of the course on comment writing, and 2 in the end of the course on report writing.

1. The first week of the course is on Scratch, and the assignment is loose: Write a fun game. The underlying objectives are that the students a) play with programming, b) consider the design-phase prior to programming, c) focus away from dry text-based programming to fun and interactive results, d) give the students the experience of having made a real game their first week on the education. The student's present their solution, and I'm thinking that we can use peer-grading in the design-phase and in the result-phase. I want the process to focus on the positive aspect of creating a game rather than the grading/comparative aspects of university education.

